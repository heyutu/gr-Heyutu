/* -*- c++ -*- */
/* 
 * Copyright 2013 <+YOU OR YOUR COMPANY+>.
 * 
 * This is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 * 
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <gr_io_signature.h>
#include <Heyutu_peak_detector_fb.h>
#include <string.h>



Heyutu_peak_detector_fb_sptr
Heyutu_make_peak_detector_fb (float threshold_factor_rise,
		     float threshold_factor_fall,
		     int look_ahead, float alpha)
{
	return Heyutu_peak_detector_fb_sptr (new Heyutu_peak_detector_fb (threshold_factor_rise,
				  threshold_factor_fall,
				  look_ahead, alpha));
}


Heyutu_peak_detector_fb::Heyutu_peak_detector_fb (float threshold_factor_rise,
		float threshold_factor_fall,
		int look_ahead, float alpha)
	: gr_sync_block ("peak_detector_fb",
		   gr_make_io_signature (1, 1, sizeof (float)),
		   gr_make_io_signature (1, 1, sizeof (char))),
    d_threshold_factor_rise(threshold_factor_rise),
    d_threshold_factor_fall(threshold_factor_fall),
    d_look_ahead(look_ahead), d_avg_alpha(alpha), d_avg(0), d_found(0)
{
}

Heyutu_peak_detector_fb::~Heyutu_peak_detector_fb ()
{
}


int
Heyutu_peak_detector_fb::work (int noutput_items,
			gr_vector_const_void_star &input_items,
			gr_vector_void_star &output_items)
{
	const float *in = (const float *) input_items[0];
	float *out = (float *) output_items[0];

	// Do <+signal processing+>

	// Tell runtime system how many output items we produced.
	return noutput_items;
}

